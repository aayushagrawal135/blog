{
  
    
        "post0": {
            "title": "Coding questions that I would like to revisit",
            "content": "Dynamic Programming . Longest Increasing Subsequence in O(nlogn) | Longest Valid Parentheses | Count Square Submatrices with All Ones | Best Sightseeing Pair | Maximum Number of Points with Cost Extension of previous question | Edit Distance | . Breadth First Search . Find Bottom Left Tree Value | Course Schedule II | Max Area of Island | .",
            "url": "https://aayushagrawal135.github.io/blog/2022/01/05/Shortlisted-coding-questions.html",
            "relUrl": "/2022/01/05/Shortlisted-coding-questions.html",
            "date": " • Jan 5, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Awsome links",
            "content": "IJava - Java in Jupyter notebook [This notebook itself is written with Java kernel in a Jupyter notebook] . | Attaching JDK source code in Eclipse [In some openjdk versions there are issues with symlink as a result of which Eclipse doesn&#39;t recognize the original src.zip] . | Adding external JAR in Eclipse . | Latex in Jekyll . | Make a pip package out of python code . | Lectures of Assembly Language Programming . | Guide to x86-64 and Registers in Assembly . | The dummy&#39;s guide to MFCC . | How to use lldb (Command line debugging tool for C/C++) . | Get optional command line args in C/C++ . | . Computer Vision . Homogenous Coordinates | Lilian Weng&#39;s blog [Mostly NLP and object detection in vision] | You don&#39;t really know softmax | Roamin Beaumont&#39;s blog | .",
            "url": "https://aayushagrawal135.github.io/blog/2021/07/28/Awsome-Links.html",
            "relUrl": "/2021/07/28/Awsome-Links.html",
            "date": " • Jul 28, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Matrices Revisited",
            "content": "Norm . Norm is a function which when applied, gives a measure of distance-ness from the origin, or the size of the vector. This function has the following properties . $$f(x) = 0 text{ then } x = 0 tag{1}$$ . $$f(x+y) leq f(x) + f(y) cdots text{ Triangle Inequality} tag{2}$$ . $$f( alpha x) = | alpha| f(x) text{ } forall alpha in mathbb{R} tag{3}$$ . Examples of Norm are, . $$||x||_p = left( sum_i |x_i|^p right)^ frac{1}{p} tag{$L^p$ Norm}$$ . When $p = 2$, we have $L^2$ norm, also known as Euclidean norm. For practical purposes we use squared $L^2$ norm. $$||x||_p = sum_i |x_i|^2$$ . However, when when we are working with values near $0$, a change of $ epsilon$ will cause the squared $L^2$ norm to change by $ epsilon^2$, which will be very small. Thus we can use $L^1$ norm in those cases. . $$||x||_1 = sum_i |x_i| tag{$L^1$ Norm}$$ . Orthogonal matrices . Properties of orthogonal matrices . They must be square | Rows are mutually orthonormal | Columns are mutually orthonormal | . Two vectors $x$ and $y$ are orthonormal if their dot product is 0 and they have unit norm. . As a result of the definition, the below property follows for any orthogonal matrix $A$, . $$A^T A = A A^T = I$$ . $$A^{-1} = A^T$$ . Multiplying with orthogonal matrices leads to rotation . To prove that multiplying with an orthogonal matrix leads to a rotation, we need to prove two things, . The length/norm of the vector is preserved after matrix operation. | The angles between vectors are preserved after matrix operation. | . Length is preserved . Let $c$ be an orthogonal matrix, then the squared norm of the transformed vector is as follows, $$||c vec{x}||^2$$ . $$= c vec{x} cdot c vec{x}$$ . $$= (c vec{x})^T c vec{x}$$ . $$= vec{x}^T c^T c vec{x}$$ . $$= vec{x}^T I vec{x}$$ . $$= vec{x}^T vec{x}$$ . $$= vec{x} cdot vec{x}$$ . $$= || vec{x} ||^2$$ . Angle between vectors is preserved . Let $ vec{v}$ and $ vec{w}$ be two vectors and let $ theta$ be the angle between them. . $$ therefore text{ } cos theta = frac{ vec{v} cdot vec{w}}{|| vec{v}|| text{ }|| vec{w}||}$$ . Let $ theta_c$ be the angle between the rotated vectors. . $$ therefore text{ } cos theta_c = frac{C vec{v} cdot C vec{w}}{||C vec{v}|| text{ }||C vec{w}||}$$ . $$ = frac{(C vec{w})^T C vec{v}}{|| vec{v}|| text{ }|| vec{w}||}$$ . $$ = frac{ vec{w}^T C^T C vec{v}}{|| vec{v}|| text{ }|| vec{w}||}$$ . $$ = frac{ vec{w}^T I vec{v}}{|| vec{v}|| text{ }|| vec{w}||}$$ . $$ = frac{ vec{w}^T vec{v}}{|| vec{v}|| text{ }|| vec{w}||}$$ . $$ = frac{ vec{v} cdot vec{w}}{|| vec{v}|| text{ }|| vec{w}||}$$ . $$ cos theta_c = cos theta $$ . Eigen vectors and Eigen values . For a matrix $A$, a vector $x$ and some scalar constant $ lambda$, we can have an equation as below, . $$A x = lambda x$$ . Here, $x$ becomes the eigen vector and $ lambda$ its corresponding eigen value. . To get an intuition for this equation, we can start by thinking of a matrix multiplication on a vector as application of a function that leads to a transformation in the space. This space in which the transformation take place will have few axes (imaging $x$, $y$ and $z$, however more than three are possible). The transformation by the matrix $A$ can be decomposed into sub-transformations along these axes. That scaling factor $ lambda$ is called the eigen value. . Let us assume a vector $ vec{v}$ along the axes $x$ ($x$ from the equation above). Now, the dot product of $ vec{v}$ will cancel out with all the other axes except $x$. Thus the scaling (transformation) will happen only in the direction of $x$ axes. . &quot;Cancels out&quot; is a crude term which holds only for matrices whose eigen vectors are orthogonal (see below). Let us assume that the transformation is quantified by an array with each value as a metric of change in the axes other than $x$, then we have chosen the case for other axes as say $[0, 0, 0, 0, 0]$, which could well be $[-1, 2, -3, 4, -2]$ where sum of both the arrays is 0, but the former is easier to visualize. . Eigen vectors of a symmetric matrix are orthogonal . Let $A$ be a symmetric matrix with $x$ and $y$ as two of its eigen vectors and $ lambda_1$ and $ lambda_2$ be distinct and corresponding eigen values. . $$ therefore text{ } A x = lambda_1 x tag{1}$$ Multiplying both sides on left with $y^T$ $$ therefore text{ } y^T A x = lambda_1 y^T x$$ Taking transpose on both sides, $$ therefore text{ } left(y^T A x right)^T = lambda_1 left(y^T x right)^T$$ . $$ therefore text{ } x^T A^T y = lambda_1 x^T y$$ Since $A$ is symmetric, we have $A = A^T$ $$ therefore text{ } x^T A y = lambda_1 x^T y tag{2}$$ . Also, $$ therefore text{ } A y = lambda_2 y tag{3}$$ Multiplying both sides on left with $x^T$ $$ therefore text{ } x^T A y = lambda_2 x^T y tag{4}$$ Subtracting $(4)$ from $(2)$ we get, $$x^T y cdot ( lambda_1 - lambda_2) = 0$$ Since $ lambda_1 neq lambda_2$ , we have, $$x^T y = 0$$ . This implies that $y cdot x = 0$ or that $x$ and $y$ are orthogonal vectors. . Eigen Decomposition . Singular Value Decomposition . Spectral norm .",
            "url": "https://aayushagrawal135.github.io/blog/2021/07/11/Matrices-revisited.html",
            "relUrl": "/2021/07/11/Matrices-revisited.html",
            "date": " • Jul 11, 2021"
        }
        
    
  
    
        ,"post3": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://aayushagrawal135.github.io/blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post4": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://aayushagrawal135.github.io/blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hi there, thanks for dropping by! . I am first year Masters student in Computer Science at New York University, Courant. I completed my Bachelors in Information &amp; Communication Technology from DAIICT. . It seems that majority of the posts would be centered around math or computer science, which is why I chose fastpages to build my blog on (Kudos to the fastpages team). However, I like to get familiar with sports, MELA, history and economics as well. I want to read about them more and I am looking forward to a write about them from myself. .",
          "url": "https://aayushagrawal135.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://aayushagrawal135.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}